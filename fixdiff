#!/bin/bash

# Set the default values for the branch and remote flags
branch="master"
remote="origin"

# Parse command-line options using getopts

# while the number of args is greater than 0
while [[ $# -gt 0 ]]; do
    # if the first argument is one of the flags then assign the next argument to the varaible (assuming flags are given as --flag value) then shift args list to next flag
    case "$1" in
        --branch)
            branch="$2"
            shift 2
            ;;
        --remote)
            remote="$2"
            shift 2
            ;;
        *)
            echo "Invalid option: $1" >&2
            exit 1
            ;;
    esac
done

# test whether the current dir is a git repository
if [[ ! $(git rev-parse --git-dir 2> /dev/null) ]];
then
	echo 'Current working directory is not a git repository.';
	exit;
fi

# test whether eslint is installed as a command
if ! command -v eslint >/dev/null 2>&1; then
    echo "eslint is not installed."
    exit;
fi

# fetch remote
echo "Fetching $remote..."
git fetch "$remote"

# get all paths of all files different from default branch
git log "$remote"/"$branch".. --name-only --pretty=format: |

# remove files in the diff that do not exist such as deleted or renamed files
xargs -I {} sh -c 'test -e "$1" && echo "$1"' _ {} |

# remove all non javascript or typescript files
grep -E '\.(js|ts)$' |

# transform the relative paths to absolute paths
xargs -I{} realpath {} |

# remove all blank lines
grep -v '^$' |

# sort and remove duplicates
sort | uniq |

# execute eslint fix on each file
xargs -I{} sh -c 'echo "fixing $1" && eslint --fix --quiet $1' _ {}
